### =========================================================================
### Prepare data
### =========================================================================
# Take anguilla data set from dismo package
data("Anguilla_train")
# Run wsl glm
vrs=c("SegSumT","USRainDays","USSlope")
env=Anguilla_train[,vrs]
form=as.formula(paste("Presence~",paste(paste0("s(",vrs,")"),collapse="+")))
# Try out wsl.glm funcion
modi2=wsl.gam(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="splitsample",
reps=3,
project="prototest",
mod_tag="test-gam",
formula=form,
family="binomial",
step=F)
# Try out custom summary function
summary(modi2)
# Access glm object of first replicate
summary(modi2@fits$`test-gam01`)
preps=function(env=parent.frame(),call){
env=as.list(env)
### ----------------
### check input data
### ----------------
if(env$replicatetype%in%c("none","cv","block-cv","splitsample")==F){stop("Non-existing replicatetype!")}
if(env$replicatetype=="block-cv" && is.na(env$strata)){stop("Stratum vector needed for block crossvalidation!")}
if(env$replicatetype=="block-cv" && unique(env$strata)!=env$reps){stop("Stratum vector has wrong number of levels!")}
if(env$replicatetype%in%c("cv","block-cv","splitsample")==T && (is.na("reps") ==T || env$reps<2)){stop("Give reasonalbe number of replicates!")}
if(env$replicatetype=="none" && env$reps>1){env$reps=1;warning("Replicate type is 'none' but multiple replicates were chosen - replicates are set to 1")}
#check for file path
if(env$save && is.na(env$project)){stop("supply project in which data should be saved!")}
if(env$save && !(env$project%in%list.dirs(env$path))){stop(paste("Project directory not existing in",env$path,
"- please create manually"))}
### -------------------
### generate wsl.fit obj
### -------------------
out<-wsl.fit()
# store function call
out@call<-call
### -------------------
### add meta.info
### -------------------
m.i=list()
m.i$author=Sys.info()[["user"]]
m.i$date=Sys.time()
m.i$replicatetype=env$replicatetype
m.i$replicates=env$reps
m.i$taxon=env$taxon
m.i$env_vars=paste(colnames(env$env_vars),collapse=", ")
m.i$project=env$project
m.i$model_tag=env$mod_tag
# Add step info if exists
if("step"%in%names(env)){
m.i$step=env$step
}
out@meta=m.i
### ----------------------
### partition observations
### ----------------------
# partition observations according to replicate type
dat=cbind(data.frame(Presence=env$pa),env$env_vars)
obschoice<-list()
testing<-list()
if(env$replicatetype=="none"){
obschoice[[1]]<-dat
} else if (env$replicatetype=="splitsample"){
for (i in 1:env$reps){
obschoice[[i]]<-dat[sample(1:nrow(dat),size=round(nrow(dat)*0.7),replace=F),]
testing[[i]]<-dat[c(1:nrow(dat))[-which(1:nrow(dat)%in%obschoice[[i]])],]
}
} else if (grepl("cv",env$replicatetype)){
if(env$replicatetype=="cv"){
unistr=sample(1:5,size=nrow(dat),replace=T)
} else {
unistr=unique(strata)
}
for (i in 1:env$reps){
obschoice[[i]]<-dat[which(unistr!=unistr[i]),]
testing[[i]]<-dat[which(unistr!=unistr[i]),]
}
}
# add testing data to wsl.fit obj
out@tesdat=testing
# return objects for model fitting
return(list(wslfi=out,train=obschoice))
}
form=as.formula(paste("Presence~",paste(paste0("s(",vrs,")"),collapse="+")))
# Try out wsl.glm funcion
modi2=wsl.gam(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="splitsample",
reps=3,
project="prototest",
mod_tag="test-gam",
formula=form,
family="binomial",
step=F)
# Try out custom summary function
summary(modi2)
# Access glm object of first replicate
summary(modi2@fits$`test-gam01`)
wsl.gam<-function(pa=numeric(),
env_vars=data.frame(),
taxon=character(),
replicatetype=character(),
reps,
strata=NA,
save=F,
project=NA,
path=NA,
step=F,
mod_tag="",
...){
# check input
lis=preps(call=match.call())
#fit glm
fits=list()
for(i in 1:reps){
fits[[i]]=gam(...,data=lis$train[[i]])
if(step){
fits[[i]]=stepAIC(fits[[i]],direction="both",trace=F)
}
}
# Name the fits
if(mod_tag==""){
mod_tag="gam"
}
names(fits)=paste0(mod_tag,sprintf("%02d",1:reps))
# supply fitted objects
lis$wslfi@fits=fits
# Save
#...
return(lis$wslfi)
}
form=as.formula(paste("Presence~",paste(paste0("s(",vrs,")"),collapse="+")))
# Try out wsl.glm funcion
modi2=wsl.gam(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="splitsample",
reps=3,
project="prototest",
mod_tag="test-gam",
formula=form,
family="binomial",
step=F)
# Try out custom summary function
summary(modi2)
# Access glm object of first replicate
summary(modi2@fits$`test-gam01`)
# ###########################################################################
# Get an overview over the data and figure out which traits make most sense
# to be used
#
# $Date: 2017-11-29
#
# Author: Philipp Brun, philipp.brun@wsl.ch
# National Institute of Aquatic Resources (DTU-Aqua),
# Technical University of Denmark, Charlottenlund
#
# ###########################################################################
### =========================================================================
### Initialise system
### =========================================================================
# Start with house cleaning
rm(list = ls()); graphics.off()
### =========================================================================
### Get ID
### =========================================================================
setwd("R:/brunp/cluster_jobs/SDM_correlation/Src/Tools/wsl_biodiv/")
### =========================================================================
### Initialise system
### =========================================================================
# Load necessary Packages
library(mgcv)
library(dismo)
library(MASS)
library(gbm)
# source functions
scr=list.files("functions/",full.names=T)
for(i in 1:length(scr)){source(scr[i])}
### =========================================================================
### Prepare data
### =========================================================================
# Take anguilla data set from dismo package
data("Anguilla_train")
# Run wsl glm
vrs=c("SegSumT","USRainDays","USSlope")
env=Anguilla_train[,vrs]
### =========================================================================
### Check out wsl.glm
### =========================================================================
form=as.formula(paste("Presence~",paste(paste0("poly(",vrs,",2)"),collapse="+")))
# Try out wsl.glm funcion
modi=wsl.glm(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="cv",
reps=5,
project="prototest",
mod_tag="test-glm",
formula=form,
family="binomial",
step=T)
# Try out custom summary function
summary(modi1)
# Access glm object of first replicate
summary(modi1@fits$`test-glm01`)
form=as.formula(paste("Presence~",paste(paste0("poly(",vrs,",2)"),collapse="+")))
# Try out wsl.glm funcion
modi1=wsl.glm(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="cv",
reps=5,
project="prototest",
mod_tag="test-glm",
formula=form,
family="binomial",
step=T)
# Try out custom summary function
summary(modi1)
# Access glm object of first replicate
summary(modi1@fits$`test-glm01`)
form=as.formula(paste("Presence~",paste(paste0("s(",vrs,")"),collapse="+")))
# Try out wsl.glm funcion
modi2=wsl.gam(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="splitsample",
reps=3,
project="prototest",
mod_tag="test-gam",
formula=form,
family="binomial",
step=F)
# Try out custom summary function
summary(modi2)
# Access glm object of first replicate
summary(modi2@fits$`test-gam01`)
# Try out wsl.glm funcion
modi3=wsl.gbm(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="none",
reps=1,
project="prototest",
mod_tag="test-brt",
formula=Presence ~ . ,
distribution = "bernoulli",
interaction.depth = 1,
shrinkage=.01,
n.trees = 3500)
# Try out custom summary function
summary(modi3)
# Access glm object of first replicate
summary(modi3@fits$`test-brt01`)
### ================================
# ###########################################################################
# Get an overview over the data and figure out which traits make most sense
# to be used
#
# $Date: 2017-11-29
#
# Author: Philipp Brun, philipp.brun@wsl.ch
# National Institute of Aquatic Resources (DTU-Aqua),
# Technical University of Denmark, Charlottenlund
#
# ###########################################################################
### =========================================================================
### Initialise system
### =========================================================================
# Start with house cleaning
rm(list = ls()); graphics.off()
### =========================================================================
### Get ID
### =========================================================================
setwd("R:/brunp/cluster_jobs/SDM_correlation/Src/Tools/wsl_biodiv/")
### =========================================================================
### Initialise system
### =========================================================================
# Load necessary Packages
library(mgcv)
library(dismo)
library(MASS)
library(gbm)
# source functions
scr=list.files("functions/",full.names=T)
for(i in 1:length(scr)){source(scr[i])}
### =========================================================================
### Prepare data
### =========================================================================
# Take anguilla data set from dismo package
data("Anguilla_train")
# Run wsl glm
vrs=c("SegSumT","USRainDays","USSlope")
env=Anguilla_train[,vrs]
### =========================================================================
### Check out wsl.glm
# Try out wsl.glm funcion
modi3=wsl.gbm(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="none",
reps=1,
project="prototest",
mod_tag="test-brt",
formula=Presence ~ . ,
distribution = "bernoulli",
interaction.depth = 1,
shrinkage=.01,
n.trees = 3500)
# Try out custom summary function
summary(modi3)
# Access glm object of first replicate
summary(modi3@fits$`test-brt01`)
for(i in 1:length(scr)){source(scr[i])}
### =========================================================================
### Check out wsl.gbm
### =========================================================================
# Try out wsl.glm funcion
modi3=wsl.gbm(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="none",
reps=1,
project="prototest",
mod_tag="test-brt",
formula=Presence ~ . ,
distribution = "bernoulli",
interaction.depth = 1,
shrinkage=.01,
n.trees = 3500)
# Try out custom summary function
summary(modi3)
# Access glm object of first replicate
summary(modi3@fits$`test-brt01`)
feat=c("linear=true","quadratic=true","hinge=true","product=true","threshold=false")
# Try out wsl.glm funcion
modi4=wsl.maxent(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="none",
reps=1,
project="prototest",
mod_tag="test-mxe",
args=feat)
# Try out custom summary function
summary(modi4)
# Access glm object of first replicate
summary(modi4@fits$`test-mxe01`)
# Try out wsl.glm funcion
modi4=wsl.maxent(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="block-cv",
reps=2,
strata=sample(1:3,length(pa)),
project="prototest",
mod_tag="test-mxe",
args=feat)
feat=c("linear=true","quadratic=true","hinge=true","product=true","threshold=false")
# Try out wsl.glm funcion
modi4=wsl.maxent(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="block-cv",
reps=2,
strata=sample(1:3,nrow(env)),
project="prototest",
mod_tag="test-mxe",
args=feat)
feat=c("linear=true","quadratic=true","hinge=true","product=true","threshold=false")
# Try out wsl.glm funcion
modi4=wsl.maxent(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="block-cv",
reps=2,
strata=sample(1:3,nrow(env),replace=F),
project="prototest",
mod_tag="test-mxe",
args=feat)
feat=c("linear=true","quadratic=true","hinge=true","product=true","threshold=false")
# Try out wsl.glm funcion
modi4=wsl.maxent(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="block-cv",
reps=2,
strata=sample(1:3,nrow(env),replace=T),
project="prototest",
mod_tag="test-mxe",
args=feat)
feat=c("linear=true","quadratic=true","hinge=true","product=true","threshold=false")
# Try out wsl.glm funcion
modi4=wsl.maxent(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="block-cv",
reps=3,
strata=sample(1:3,nrow(env),replace=T),
project="prototest",
mod_tag="test-mxe",
args=feat)
sample(1:3,nrow(env),replace=T)
length(unique(gam(...,data=lis$train[[i]])))
for(i in 1:length(scr)){source(scr[i])}
### =========================================================================
feat=c("linear=true","quadratic=true","hinge=true","product=true","threshold=false")
# Try out wsl.glm funcion
modi4=wsl.maxent(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="block-cv",
reps=3,
strata=sample(1:3,nrow(env),replace=T),
project="prototest",
mod_tag="test-mxe",
args=feat)
# Try out custom summary function
summary(modi4)
# Access glm object of first replicate
summary(modi4@fits$`test-mxe01`)
# Get an overview over the data and figure out which traits make most sense
# to be used
#
# $Date: 2017-11-29
#
# Author: Philipp Brun, philipp.brun@wsl.ch
# National Institute of Aquatic Resources (DTU-Aqua),
# Technical University of Denmark, Charlottenlund
#
# ###########################################################################
### =========================================================================
### Initialise system
### =========================================================================
# Start with house cleaning
rm(list = ls()); graphics.off()
### =========================================================================
### Get ID
### =========================================================================
setwd("R:/brunp/cluster_jobs/SDM_correlation/Src/Tools/wsl_biodiv/")
### =========================================================================
### Initialise system
### =========================================================================
# Load necessary Packages
library(mgcv)
library(dismo)
library(MASS)
library(gbm)
# source functions
scr=list.files("functions/",full.names=T)
for(i in 1:length(scr)){source(scr[i])}
### =========================================================================
### Prepare data
### =========================================================================
# Take anguilla data set from dismo package
data("Anguilla_train")
# Run wsl glm
vrs=c("SegSumT","USRainDays","USSlope")
env=Anguilla_train[,vrs]
# Try out wsl.glm funcion
modi4=wsl.maxent(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="block-cv",
reps=3,
strata=sample(1:3,nrow(env),replace=T),
project="prototest",
mod_tag="test-mxe",
args=feat)
tst=sample(1:3,nrow(env),replace=T)
unique(tst)
for(i in 1:length(scr)){source(scr[i])}
feat=c("linear=true","quadratic=true","hinge=true","product=true","threshold=false")
# Try out wsl.glm funcion
modi4=wsl.maxent(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="block-cv",
reps=3,
strata=sample(1:3,nrow(env),replace=T),
project="prototest",
mod_tag="test-mxe",
args=feat)
# Try out custom summary function
summary(modi4)
# Access glm object of first replicate
summary(modi4@fits$`test-mxe01`)
for(i in 1:length(scr)){source(scr[i])}
feat=c("linear=true","quadratic=true","hinge=true","product=true","threshold=false")
# Try out wsl.glm funcion
modi4=wsl.maxent(pa=Anguilla_train$Angaus,
env_vars = env,
taxon="Angaus",
replicatetype="block-cv",
reps=3,
strata=sample(1:3,nrow(env),replace=T),
project="prototest",
mod_tag="test-mxe",
args=feat)
# Try out custom summary function
summary(modi4)
# Access glm object of first replicate
summary(modi4@fits$`test-mxe01`)
