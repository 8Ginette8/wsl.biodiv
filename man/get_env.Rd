% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_env.R
\name{get_env}
\alias{get_env}
\title{Extract environments based on yearly observations (local or URL sources)}
\usage{
get_env(
  env_layers = c("prec", "tmin"),
  timeline = "monthly",
  months = c(6, 7, 8),
  obs = data.frame(),
  download = TRUE,
  d.path = getwd()
)
}
\arguments{
\item{env_layers}{Vector. Which environment should be extracted? One or several may be
chosen among 'prec', 'tmax' and 'tmin'. Default is c('prec','tmin').}

\item{timeline}{String. What type of data extraction is applied? Available choices are
'yearly' or 'monthly'. One or the other will give mean, median, min and max values. To
note that 'monthly' will run faster than 'yearly' since less files will be downloaded.
Default is 'monthly'.}

\item{months}{Vector. Only if time = 'monthly'. Which months should be accounted
for? Input must be from 1 to 12. To note that values from -1200 (December n-1) to 1200
(December n+1; step of 100) may be chosen, and corresponds to the months of the year n-1
and n+1 respectively. Default is June, July and August.}

\item{obs}{A data.frame with three columns (describing in order: Longitude, Latitude and year
of sampling). The observations needs to be from the same CRS as the 'env_layers'.}

\item{download}{Logical. If FALSE, the environmental layers are locally available and will be
extracted from 'd.path'.}

\item{d.path}{Character. The folder path where the environmental layers should be saved or stored.}
}
\value{
A data.frame describing for each observations their associated environmental values.
}
\description{
Based on the integrated list of CHELSA files (https://chelsa-climate.org/;
CHELSAcruts), this function extracts environmental values from given observations
at their year of sampling (mean, median, min, max or montly averaged).It is
important to note that CHELSAcruts is available for 1901-2016.
}
\examples{

# Packages
library(wsl.biodiv)
data(xy_ppm)
 
# Dummy observations
random.year = (1901:1921)[sample(1:21,nrow(xy.ppm),replace=TRUE)]
obs = data.frame(xy.ppm[,c("x","y")],year=random.year)[1:5,]

# Run function
sp.env = get_env(env_layers = 'tmin',
                 timeline = 'monthly',
                 months = c(-1200,1,2),
                 obs = obs,
					download = TRUE,
					d.path = getwd())

}
\references{
...
}
