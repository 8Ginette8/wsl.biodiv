% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wsl_evaluate.R
\name{wsl.evaluate.pa}
\alias{wsl.evaluate.pa}
\title{Evaluate presence-absence models}
\usage{
wsl.evaluate.pa(
  x,
  tester = data.frame(),
  window = NULL,
  thres = numeric(),
  crit = "pp=op",
  prevalence_correction = FALSE,
  pres_only = FALSE,
  log_trans = TRUE,
  bias_cov = NULL
)
}
\arguments{
\item{x}{A wsl.fit object}

\item{tester}{Optional. A data.frame with testing data. Only mandatory if replicatetype='none'
was chosen when models were fitted. Otherwise, used when evaluation against external dataset is needed.
Must be a data.frame with as columns in order : "Presence" ('0' and '1'), "CV" (numeric: chosen
cv-folds; if replicatetype='none' -> only '1') and associated environmental values (same ones as
for fitted models; i.e. same columns order and names). Note that categorical predictor values must
be of class factor. NB: Here, model evaluation will only be initiated for the new testing data.}

\item{window}{Only when 'wsl.ppmO' used'. Same object of class 'owin' used for models (in developments)}

\item{thres}{Vector of the same length as the number of reps in model fit object. For wsl.flex
model outputs, thresholds have to be labelled with the same names provided to models.}

\item{crit}{Which threshold criterion should be considered? Currently 'pp=op'
(predicted prevalence = observed prevalence), 'maxTSS' (threshold yielding maximum TSS),
and 'external' (thresholds manually supplied) are possible}

\item{prevalence_correction}{logical. Should imbalanced presence/absence data be upsampled to
prevalence 0.5 for model evaluation.}

\item{pres_only}{Logical. If TRUE, evaluation metrics of presence-absence models is applied
to a wsl.fit object of presence-only models i.e. generated with wsl.ppmGlasso()}

\item{log_trans}{Logical. Use only if pres_only=TRUE. Should predictions be converted to logarithm
before evaluation? Prevent model evaluation errors.}

\item{bias_cov}{A numerical vector whose length equal the number of environmental layers/columns.
Only used when a bias covariate is implemented in the model calibration i.e. to fit species obs. with
a potential spatial observer bias. Default is 1 for each variable, whereas designated bias covariate(s)
(i.e. 0) will be reset everywhere to zero in order to evaluate corrected predictions}
}
\value{
An object of class 'wsl.evaluation'
}
\description{
Assess several model skill metrics for all models in a wsl.fit object. Currently
AUC, RMSE, TSS, PPV, Accuracy, and Cohen's Kappa are evaluated. Furthermore, the
threshold applied is returned.
}
\examples{

# Take anguilla data set from dismo package
data("Anguilla_train")
vrs=c("SegSumT","USRainDays","USSlope")
env=Anguilla_train[,vrs]

### Check out wsl.gam
form.gam=as.formula(paste("Presence~",paste(paste0("s(",vrs,")"),collapse="+")))

# Try out wsl.gam funcion
modi2=wsl.gam(pa=Anguilla_train$Angaus,
              env_vars = env,
              taxon="Angaus",
              replicatetype="splitsample",
              reps=3,
              project="prototest",
              mod_tag="test-gam",
              formula=form.gam,
              family="binomial",
              step=FALSE)

# Try out custom summary function
summary(modi2)

# Access gam object of first replicate
summary(modi2@fits$replicate_01$`test-gam`)

# Evaluate the model
eval2=wsl.evaluate.pa(modi2,crit="maxTSS")

# Get evaluation summary
summary(eval2)

}
\author{
Philipp Brun, Yohann Chauvier
}
